name: Deploy AppointmentSchedulingService to AWS ECS

on:
  push:
    branches:
      - feature/appointment-scheduling-service  # Trigger this pipeline when there's a push to this branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: mvn install -DskipTests  # Install dependencies without running tests

      - name: Run Unit Tests
        run: mvn test  # Run unit tests

      - name: Build Project
        run: mvn clean install  # Build project and run tests (skipTests removed)

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the deploy job runs after build job successfully completes

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install kubectl
        uses: Azure/setup-kubectl@v4.0.0
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}  # Use commit SHA for the image tag
          REPOSITORY: appointment-scheduling-service
        run: |
            docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update kube config
        run: aws eks update-kubeconfig --name medilab-cluster

      - name: Deploy to EKS
        run: |
          # Replace image tag in deployment.yaml
          sed -i "s|\${IMAGE_TAG}|${{ github.sha }}|g" ./deploy.yaml
          kubectl apply -f ./deploy.yaml --validate=false
          kubectl apply -f ./service.yaml
